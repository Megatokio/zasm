              	; --------------------------------------
              	; zasm: assemble "zasm-test-opcodes-180.asm"
              	; opts: --z180
              	; date: 2018-05-18 20:49:25
              	; --------------------------------------


              	#!/usr/local/bin/zasm -o original/
              	; –––––––––––––––––––––––––––––––––––––––––––––––––
              	; 				zasm test file
              	; –––––––––––––––––––––––––––––––––––––––––––––––––
              	;
              	; 2014-10-29 kio
              	; 2014-12-25 kio
              	; 2014-12-26 kio
              	; 2014-12-27 kio
              	; 2014-12-31 kio:	jp(hl) for 8080 allowed, removed 8080regs
              	
              	
              	; tests selector:
              	
0001:         	test_expressions 		equ 1
0001:         	test_addressing_modes 	equ	1
0001:         	test_compound_opcodes	equ	1	; include tests for "compound opcodes"
0001:         	test_fails 				equ 1	; include the "must fail" tests
              	
              	
              		.z180
0000:         		org 0
              		
              	
              	; –––––––––––––––––––––––––––––––––––––––––––––––––
              	; 				test expressions
              	; –––––––––––––––––––––––––––––––––––––––––––––––––
              	
              	#if test_expressions
              	#local
0005:         	n5 			= 		5
0014:         	n20			equ		20
0014:         	n20			equ 	20
              	
              	#if test_fails
0014:         	!anton		equ		20 30		; operator missing
              	!n20		equ 	30			; label redefined
              	!foo		equ					; value missing
              	#endif
              	
0000: 0A      		db		10
0001: 10      		db		$10
0002: 02      		db		%10
0003: 10      		db		10h
0004: 02      		db		10b
0005: 10      		db		0x10
0006: 41      		db		'A'
0007: 85      		db		-123
0008: 7B      		db		+123
0009: 00      		db		0
000A: 02      		db		2
000B: 00      		db		0b
000C: 01      		db		1b
000D: 08      		db		8h
000E: 0A      		db		0b1010
000F: 02      		db		0b10
              	
              	#ASSERT	0 == 0
              	#aSSert	-1 == -1
              	#assert	33 == 33
              	
              	#assert	5 > 3
              	#assert	3 < 5
              	#assert	5 != 3
              	#assert	3 >= 3
              	#assert	3 <= 3
              	#assert	5 >= 3
              	#assert	3 <= 5
              	
              	#assert 	(0 || 0) == 0
              	#assert	(0 && 0) == 0
              	#assert 	(1 || 1) == 1
              	#assert	(1 && 1) == 1
              	#assert 	(0 || 1) == 1
              	#assert	(1 && 0) == 0
              	#assert 	(1 || foo) == 1
              	#assert	(0 && foo) == 0
              	#assert	0 ? 0 : 1
              	#assert	0 ? foo : 1
              	#assert	1 ? 1 : foo
              	#assert	!(1 ? 0 : 1)
              	#assert	!(0 ? 1 : 0)
              	#assert	1||0 ? 1 : 0
              	#assert	0||1 ? 1 : 0
              	#assert	0&&1 ? 0 : 1
              	#assert	1&&0 ? 0 : 1
              	#assert	!(0 && 0 == 0)
              	#assert	1 ? 1 : 1 ? 0 : 0
              	#assert	0 ? 0 : 1 ? 1 : 0
              	#assert	0 ? 0 : 0 ? 0 : 1
              	#assert	1 ?   1 ? 1 : 0   :   1 ? 0 : 0
              	#assert	1 ?   1 ? 1 : 0   :   0 ? 0 : 0
              	#assert	1 ?   0 ? 0 : 1   :   1 ? 0 : 0
              	#assert	1 ?   0 ? 0 : 1   :   0 ? 0 : 0
              	#assert	0 ?   1 ? 0 : 0   :   1 ? 1 : 0
              	#assert	0 ?   0 ? 0 : 0   :   1 ? 1 : 0
              	#assert	0 ?   1 ? 0 : 0   :   0 ? 0 : 1
              	#assert	0 ?   0 ? 0 : 0   :   0 ? 0 : 1
              	#assert	!(1 ? 0 : 1 ? 1 : 1)
              	#assert	!(0 ? 1 : 1 ? 0 : 1)
              	#assert	!(1 ?   1 ? 0 : 1   :   1 ? 1 : 1)
              	#assert	!(0 ?   1 ? 1 : 1   :   1 ? 0 : 1)
              	#assert	!(0 ?   1 ? 1 : 1   :   0 ? 1 : 0)
              	
              	#assert	-n20 == -20
              	
              	#assert	~0 == -1
              	#assert	~-1 == 0
              	
              	#assert	!0 == 1
              	#assert	!77 == 0
              	#assert	!-33 == 0
              	#assert	!-0 == 1
              	
              	#assert	3|5 == 7
              	#assert	3&5 == 1
              	#assert	3^5 == 6
              	
              	#assert 	3<<2 == 3*4
              	#assert	0xff00<<4 == 0xff000
              	#assert	7>>1 == 3
              	#assert	0xff00>>4 == 0x0ff0
              	
              	#assert	3 + 5 == 8
              	#assert	3 + -5 == -2
              	#assert	3-5==-2
              	#assert	3- -5==8
              	#assert	3*5==15
              	#assert	3*-5==-15
              	#assert	3/5==0
              	#assert	55/3==18
              	#assert	-55/3==-18
              	#assert	55/-3==-18
              	#assert	-55/-3==18
              	#assert	6/3==2
              	#assert	3%5==3
              	#assert	55%3==1
              	#assert	-55%3==-1
              	#assert	55%-3==1
              	#assert	-55%-3==-1
              	#assert	6%3==0
              	
              	#assert	3 == 3/5*5 + 3%5
              	#assert	55 == 55/3*3 + 55%3
              	#assert	-55 == -55/3*3 + -55%3
              	#assert	55 == 55/-3*-3 + 55%-3
              	#assert	-55 == -55/-3*-3 + -55%-3
              	#assert	6 == 6/3*3 + 6%3
              	
              	#assert	n5+n20 == 25
              	#assert	n5+n20*2 == 45
              	#assert	n20*2+n5 == 45
              	#assert	2+4-1*7 == -1
              	#assert	-(20) == 20 * -1
              	#assert	n20/7 == 2
              	#assert	(n20+1)/7 == 3
              	#assert	1 + 2*3<<4 == 97
              	
              	#assert	hi(1234h) == 12h
              	#assert	lo(1234h) == 34h
              	#assert	opcode(nop) == 0
              	#assert	opcode(ld a,n) == 0x3e
              	#assert	opcode(ld bc,(nn)) == 4Bh
              	#assert	opcode(adc hl,bc) == 4Ah
              	#assert	opcode(rla) == 17h
              	#assert	opcode(rr b) == 18h
              	#assert	opcode(bit 1,(ix+dis)) == 4Eh
              	#assert	opcode(jp nn) == 0C3h
              	#assert	opcode(jr c,dis) == 38h
              	#assert	opcode(rst 8) == 0CFh
              	
              	#endlocal
              	#endif ; test_expressions
              	
              	
              	
              	; –––––––––––––––––––––––––––––––––––––––––––––––––
              	; 				test addressing modes
              	; –––––––––––––––––––––––––––––––––––––––––––––––––
              	
              	#if test_addressing_modes
              	#local
0010: 3E00    		ld	a,0
0012: 0601    		ld	b,1
0014: 0E02    		ld	c,2
0016: 1603    		ld	d,#3
0018: 1E04    		ld	e,4
001A: 2605    		ld	h,5
001C: 2E06    		ld	l,6
001E: 213412  		ld	hl,1234h
0021: 3607    		ld	(hl),7
0023: DB21    		in	a,(33)
0025: D321    		out	(33),a
0027: C7      		rst	0
0028: CF      		rst	1
0029: CF      		rst	8
002A: F7      		rst	n6
002B: F24000  		jp	p,nn
002E: FA4000  		jp	m,nn
0031: EA4000  		jp	pe,nn
0034: E24000  		jp	po,nn
0037: F1      		POP	af
0038: C1      		Pop	bc
0039: D1      		PoP	de
003A: E1      		pOp	hl
003B: F9      		ld	sp,hl
003C: E3      		ex	hl,(sp)
003D: 3A4000  		ld	a,(nn)
0040: 0A      		ld	a,(bc)
0041: 1A      		ld	a,(de)
0042: 0F      		rrca
              	
              	#if !defined(_8080_)
0043: ED50    		in	d,(c)
0045: ED50    		in	d,(bc)
0047: ED70    		in	f,(c)
0049: ED51    		out	(c),d
004B: ED51    		out	(bc),d
004D: ED71    		out	(bc),0
              	
004F: ED56    		im	1
0051: CB74    		bit	6,h
0053: 18FE    		jr	$
0055: 18FE    	1$:	jr	1$
0057: 28FE    		jr	z,$
0059: 20FE    		jr	nz,$
005B: 38FE    		jr	c,$
005D: 30FE    		jr	nc,$
005F: 08      		ex	af,af'
0060: ED57    		ld	a,i
0062: ED5F    		ld	a,r
              	
0064: DDE1    		pop	ix
0066: FDE1    		pop	iy
0068: DD360008		ld	(ix),8
006C: DD360209		ld	(ix+2),9
0070: DD36020A		ld	2(ix),10
0074: FD36000B		ld	(iy),11
0078: FD36020C		ld	(iy+2),12
007C: FD36020D		ld	2(iy),13
0080: DD36030E		ld	+3(ix),14
0084: DD36050F		ld	2+3(ix),15
0088: DD36FE10		ld	(ix-2),16
008C: DD36FF11		ld	(ix+2-3),17
0090: DD36FF12		ld	(ix-3+2),18
0094: DD360613		ld	(ix+3*2),19
              	
0098: DD363340		ld	(ix+33h),nn
009C: DD36CD40		ld	(ix-33h),nn
00A0: DD360040		ld	(ix),nn
00A4: DD363340		ld	33h(ix),nn
00A8: DD36CD40		ld	-33h(ix),nn
00AC: DD363840		ld	(ix+33h+5),nn
              	#endif
              	
0040:         	nn	equ	0x40
0006:         	n6	equ	6
              	
              	#endlocal
              	#endif ; test_addressing_modes
              	
              	
              	
              	
              	; –––––––––––––––––––––––––––––––––––––––––––––––––
              	;		8080/z80 opcodes (z80 syntax)
              	; –––––––––––––––––––––––––––––––––––––––––––––––––
              	
00B0: 3F      		ccf
00B1: 2F      		cpl
00B2: 27      		daa
00B3: F3      		di
00B4: FB      		ei
00B5: 76      		halt
00B6: 00      		Nop
00B7: 17      		Rla
00B8: 07      		Rlca
00B9: 1F      		Rra
00BA: 0F      		Rrca
00BB: 37      		scf
00BC: DB40    		in   a,(n)
00BE: D340    		out  (n),a
              	
              	; ––––––––––––––––––––––––––––––––––
00C0: 86      		ADD  a,(hl)
00C1: 87      		add  a,a
00C2: 80      		add  a,b
00C3: 81      		add  a,c
00C4: 82      		add  a,d
00C5: 83      		add  a,e
00C6: 84      		add  a,h
00C7: 85      		add  a,l
00C8: 86      		ADD  (hl)
00C9: C640    		add  a,n
00CB: 87      		add  a
00CC: 80      		add  b
00CD: C640    		add  n
              	
00CF: 8E      		ADC  a,(hl)
00D0: 8F      		adc  a,a
00D1: 88      		adc  a,b
00D2: 89      		adc  a,c
00D3: 8A      		adc  a,d
00D4: 8B      		adc  a,e
00D5: 8C      		adc  a,h
00D6: 8D      		adc  a,l
00D7: CE40    		adc  a,n
00D9: 8F      		adc  a
00DA: 88      		adc  b
00DB: CE40    		adc  n
              	
00DD: 9E      		sbc  a,(hl)
00DE: 9F      		sbc  a,a
00DF: 98      		sbc  a,b
00E0: 99      		sbc  a,c
00E1: 9A      		sbc  a,d
00E2: 9B      		sbc  a,e
00E3: 9C      		sbc  a,h
00E4: 9D      		sbc  a,l
00E5: DE40    		sbc  a,n
00E7: 9F      		sbc  a
00E8: 98      		sbc  b
00E9: DE40    		sbc  n
              	
00EB: 96      		sub  (HL)
00EC: 97      		sub  A
00ED: 90      		sub  B
00EE: 91      		sub  C
00EF: 92      		sub  D
00F0: 93      		sub  E
00F1: 94      		sub  H
00F2: 95      		sub  L
00F3: D640    		sub  n
00F5: 97      		sub  a,A
00F6: 90      		sub  a,B
00F7: D640    		sub  a,n
00F9: 96      		sub  a,(hl)
              	
00FA: A6      		AND  (HL)
00FB: A7      		and  A
00FC: A0      		and  B
00FD: A1      		and  C
00FE: A2      		and  D
00FF: A3      		and  E
0100: A4      		and  H
0101: A5      		and  L
0102: E640    		and  n
0104: A7      		and  a,A
0105: A0      		and  a,B
0106: E640    		and  a,n
0108: A6      		and  a,(hl)
              	
0109: B6      		or  (HL)
010A: B7      		or  A
010B: B0      		or  B
010C: B1      		or  C
010D: B2      		or  D
010E: B3      		or  E
010F: B4      		or  H
0110: B5      		or  L
0111: F640    		or  n
0113: B7      		or  a,A
0114: B0      		or  a,B
0115: F640    		or  a,n
0117: B6      		or  a,(hl)
              	
0118: AE      		xor  (HL)
0119: AF      		xor  A
011A: A8      		xor  B
011B: A9      		xor  C
011C: AA      		xor  D
011D: AB      		xor  E
011E: AC      		xor  H
011F: AD      		xor  L
0120: EE40    		xor  n
0122: AF      		xor  a,A
0123: A8      		xor  a,B
0124: EE40    		xor  a,n
0126: AE      		xor  a,(hl)
              	
0127: BE      		cp  (HL)
0128: BF      		cp  A
0129: B8      		cp  B
012A: B9      		cp  C
012B: BA      		cp  D
012C: BB      		cp  E
012D: BC      		cp  H
012E: BD      		cp  L
012F: FE40    		cp  n
0131: BF      		cp  a,A
0132: B8      		cp  a,B
0133: FE40    		cp  a,n
0135: BE      		cp  a,(hl)
              	
              	; ––––––––––––––––––––––––––––––––––
0136: 34      		inc  (HL)
0137: 3C      		inc  a
0138: 04      		inc  b
0139: 0C      		inc  c
013A: 14      		inc  d
013B: 1C      		inc  e
013C: 24      		inc  h
013D: 2C      		inc  l
              	
013E: 35      		DEC  (HL)
013F: 3D      		dec  a
0140: 05      		dec  b
0141: 0D      		dec  c
0142: 15      		dec  d
0143: 1D      		dec  e
0144: 25      		dec  h
0145: 2D      		dec  l
              	
              	; ––––––––––––––––––––––––––––––––––
0146: 7F      		ld   a,a
0147: 78      		ld   a,b
0148: 79      		ld   a,c
0149: 7A      		ld   a,d
014A: 7B      		ld   a,e
014B: 7C      		ld   a,h
014C: 7D      		ld   a,l
014D: 7E      		ld   a,(hl)
014E: 3E40    		ld   a,n
              	
0150: 47      		ld   b,a
0151: 40      		ld   b,b
0152: 41      		ld   b,c
0153: 42      		ld   b,d
0154: 43      		ld   b,e
0155: 44      		ld   b,h
0156: 45      		ld   b,l
0157: 46      		ld   b,(hl)
0158: 0640    		ld   b,n
              	
015A: 4F      		ld   c,a
015B: 48      		ld   c,b
015C: 49      		ld   c,c
015D: 4A      		ld   c,d
015E: 4B      		ld   c,e
015F: 4C      		ld   c,h
0160: 4D      		ld   c,l
0161: 4E      		ld   c,(hl)
0162: 0E40    		ld   c,n
              	
0164: 57      		ld   d,a
0165: 50      		ld   d,b
0166: 51      		ld   d,c
0167: 52      		ld   d,d
0168: 53      		ld   d,e
0169: 54      		ld   d,h
016A: 55      		ld   d,l
016B: 56      		ld   d,(hl)
016C: 1640    		ld   d,n
              	
016E: 5F      		ld   e,a
016F: 58      		ld   e,b
0170: 59      		ld   e,c
0171: 5A      		ld   e,d
0172: 5B      		ld   e,e
0173: 5C      		ld   e,h
0174: 5D      		ld   e,l
0175: 5E      		ld   e,(hl)
0176: 1E40    		ld   e,n
              	
0178: 67      		ld   h,a
0179: 60      		ld   h,b
017A: 61      		ld   h,c
017B: 62      		ld   h,d
017C: 63      		ld   h,e
017D: 64      		ld   h,h
017E: 65      		ld   h,l
017F: 66      		ld   h,(hl)
0180: 2640    		ld   h,n
              	
0182: 6F      		ld   l,a
0183: 68      		ld   l,b
0184: 69      		ld   l,c
0185: 6A      		ld   l,d
0186: 6B      		ld   l,e
0187: 6C      		ld   l,h
0188: 6D      		ld   l,l
0189: 6E      		ld   l,(hl)
018A: 2E40    		ld   l,n
              	
018C: 77      		ld   (hl),a
018D: 70      		ld   (hl),b
018E: 71      		ld   (hl),c
018F: 72      		ld   (hl),d
0190: 73      		ld   (hl),e
0191: 74      		ld   (hl),h
0192: 75      		ld   (hl),l
0193: 3640    		ld   (hl),n
              	
0195: 02      		LD   (BC),A
0196: 12      		ld   (de),a
0197: 324241  		ld   (nn),a
019A: 0A      		ld   a,(bc)
019B: 1A      		ld   a,(de)
019C: 3A4241  		ld   a,(nn)
              	
              	; ––––––––––––––––––––––––––––––––––
019F: DA4241  		jp   c,nn
01A2: FA4241  		jp   m,nn
01A5: D24241  		jp   nc,nn
01A8: C24241  		jp   nz,nn
01AB: F24241  		jp   p,nn
01AE: EA4241  		jp   pe,nn
01B1: E24241  		jp   po,nn
01B4: CA4241  		jp   Z,nn
01B7: C34241  		JP   nn
01BA: E9      		jp   (hl)
01BB: E9      		jp   hl
              	
01BC: DC4241  		CALL C,nn
01BF: FC4241  		call m,nn
01C2: D44241  		call nc,nn
01C5: C44241  		call nz,nn
01C8: F44241  		call P,nn
01CB: EC4241  		call pe,nn
01CE: E44241  		call po,nn
01D1: CC4241  		call z,nn
01D4: CD4241  		call nn
              	
01D7: C9      		RET
01D8: D8      		ret  c
01D9: F8      		ret  m
01DA: D0      		ret  nc
01DB: C0      		ret  nz
01DC: F0      		ret  p
01DD: E8      		ret  pe
01DE: E0      		ret  po
01DF: C8      		ret  z
              	
01E0: C7      		RST  00h
01E1: CF      		rst  08h
01E2: D7      		rst  n16
01E3: DF      		rst  18h
01E4: E7      		rst  20h
01E5: EF      		rst  28h
01E6: F7      		rst  30h
01E7: FF      		rst  $38
              	
01E8: C7      		rst  0
01E9: CF      		rst  n1
01EA: D7      		rst  2
01EB: DF      		rst  3
01EC: E7      		rst  4
01ED: EF      		rst  5
01EE: F7      		rst  n6
01EF: FF      		rst  7
              	
              	; ––––––––––––––––––––––––––––––––––
01F0: EB      		ex   de,hl
01F1: EB      		ex   hl,de
01F2: E3      		EX   (sp),hl
01F3: E3      		EX   hl,(sp)
              	
01F4: F1      		POP  af
01F5: C1      		pop  bc
01F6: D1      		pop  de
01F7: E1      		pop  hl
              	
01F8: F5      		PUSH af
01F9: C5      		push bc
01FA: D5      		push de
01FB: E5      		push hl
              	
01FC: F9      		ld   sp,hl
01FD: 014241  		ld   bc,nn
0200: 114241  		ld   de,nn
0203: 214241  		ld   hl,nn
0206: 314241  		ld   sp,nn
              	
0209: 09      		add  hl,bc
020A: 19      		add  hl,de
020B: 29      		add  hl,hl
020C: 39      		add  hl,sp
              	
020D: 03      		inc  bc
020E: 13      		inc  de
020F: 23      		inc  hl
0210: 33      		inc  sp
0211: 0B      		dec  bc
0212: 1B      		dec  de
0213: 2B      		dec  hl
0214: 3B      		dec  sp
              	
              	; ––––––––––––––––––––––––––––––––––
4142:         	nn	equ	0x4142
0040:         	n	equ	40h
              	
              	
              	
              	
              	; –––––––––––––––––––––––––––––––––––––––––––––––––
              	;			Z80 / non 8080 opcodes
              	; –––––––––––––––––––––––––––––––––––––––––––––––––
              	
              	#if !defined(_8080_)
0215: D9      		exx
0216: ED44    		Neg
0218: EDA9    		cpd
021A: EDB9    		cpdr
021C: EDB1    		cpir
021E: EDA1    		cpi
0220: EDAA    		Ind
0222: EDBA    		Indr
0224: EDA2    		Ini
0226: EDB2    		Inir
0228: EDA8    		Ldd
022A: EDB8    		Lddr
022C: EDA0    		Ldi
022E: EDB0    		Ldir
0230: EDBB    		Otdr
0232: EDB3    		Otir
0234: EDAB    		Outd
0236: EDA3    		Outi
0238: ED6F    		Rld
023A: ED67    		Rrd
023C: ED4D    		Reti
023E: ED45    		Retn
              	
0240: 10FE    		djnz $
0242: 08      		ex  af,af'
              	
0243: ED46    		IM	0
0245: ED56    		im	n1
0247: ED5E    		im	2
              	
0249:         	loop2:
0249: 18FE    		jr   loop2
024B: 38FC    		JR   C,loop2
024D: 30FA    		jr   nc,loop2
024F: 20F8    		jr   nz,loop2
0251: 28F6    		jr   z,loop2
              	
              	; ––––––––––––––––––––––––––––––––––
0253: ED4A    		adc  hl,bc
0255: ED5A    		adc  hl,de
0257: ED6A    		adc  hl,hl
0259: ED7A    		adc  hl,sp
              	
025B: ED42    		sbc  hl,bc
025D: ED52    		sbc  hl,de
025F: ED62    		sbc  hl,hl
0261: ED72    		sbc  hl,sp
              	
              	; ––––––––––––––––––––––––––––––––––
0263: ED78    		IN   a,(c)
0265: ED40    		in   b,(bc)
0267: ED48    		in   c,(c)
0269: ED50    		in   d,(bc)
026B: ED58    		in   e,(c)
026D: ED60    		in   h,(bc)
026F: ED68    		in   l,(c)
0271: ED70    		in   f,(bc)
              	
0273: ED79    		OUT  (c),a
0275: ED41    		out  (bc),b
0277: ED49    		out  (c),c
0279: ED51    		out  (bc),d
027B: ED59    		out  (c),e
027D: ED61    		out  (bc),h
027F: ED69    		out  (c),l
0281: ED71    		out  (c),0
              	
              	; ––––––––––––––––––––––––––––––––––
0283: ED57    		ld   a,i
0285: ED5F    		ld   a,r
0287: ED47    		ld   i,a
0289: ED4F    		ld   r,a
              	
028B: ED434241		ld   (nn),bc
028F: ED534241		ld   (nn),de
0293: 224241  		ld   (nn),hl
0296: ED734241		ld   (nn),sp
029A: ED4B4241		ld   bc,(nn)
029E: ED5B4241		ld   de,(nn)
02A2: 2A4241  		ld   hl,(nn)
02A5: ED7B4241		ld   sp,(nn)
              	
              	; ––––––––––––––––––––––––––––––––––
02A9: CB47    		bit  0,a
02AB: CB40    		bit  0,b
02AD: CB41    		bit  0,c
02AF: CB42    		bit  0,d
02B1: CB43    		bit  0,e
02B3: CB44    		bit  0,h
02B5: CB45    		bit  0,l
02B7: CB46    		BIT  0,(hl)
02B9: CB4F    		bit  1,a
02BB: CB4E    		BIT  n1,(hl)
02BD: CB54    		bit  2,h
02BF: CB56    		BIT  2,(hl)
02C1: CB5D    		bit  3,l
02C3: CB5E    		BIT  3,(hl)
02C5: CB62    		bit  4,d
02C7: CB66    		BIT  4,(hl)
02C9: CB6B    		bit  5,e
02CB: CB6E    		BIT  5,(hl)
02CD: CB71    		bit  6,c
02CF: CB76    		BIT  n6,(hl)
02D1: CB78    		bit  7,b
02D3: CB7E    		BIT  7,(hl)
              	
02D5: CB87    		res  0,a
02D7: CB80    		res  0,b
02D9: CB81    		res  0,c
02DB: CB82    		res  0,d
02DD: CB83    		res  0,e
02DF: CB84    		res  0,h
02E1: CB85    		res  0,l
02E3: CB86    		res  0,(hl)
02E5: CB8F    		res  1,a
02E7: CB8E    		res  1,(hl)
02E9: CB94    		res  2,h
02EB: CB96    		res  2,(hl)
02ED: CB9D    		res  3,l
02EF: CB9E    		res  3,(hl)
02F1: CBA2    		res  4,d
02F3: CBA6    		res  4,(hl)
02F5: CBAB    		res  5,e
02F7: CBAE    		res  5,(hl)
02F9: CBB1    		res  6,c
02FB: CBB6    		res  6,(hl)
02FD: CBB8    		res  7,b
02FF: CBBE    		res  7,(hl)
              	
0301: CBC7    		set  0,a
0303: CBC0    		set  0,b
0305: CBC1    		set  0,c
0307: CBC2    		set  0,d
0309: CBC3    		set  0,e
030B: CBC4    		set  0,h
030D: CBC5    		set  0,l
030F: CBC6    		set  0,(hl)
0311: CBCF    		set  1,a
0313: CBCE    		set  n1,(hl)
0315: CBD4    		set  2,h
0317: CBD6    		set  2,(hl)
0319: CBDD    		set  3,l
031B: CBDE    		set  3,(hl)
031D: CBE2    		set  4,d
031F: CBE6    		set  4,(hl)
0321: CBEB    		set  5,e
0323: CBEE    		set  5,(hl)
0325: CBF1    		set  6,c
0327: CBF6    		set  n6,(hl)
0329: CBF8    		set  7,b
032B: CBFE    		set  7,(hl)
              	
              	; ––––––––––––––––––––––––––––––––––
032D: CB16    		RL   (hl)
032F: CB17    		rl   a
0331: CB10    		rl   b
0333: CB11    		rl   c
0335: CB12    		rl   d
0337: CB13    		rl   e
0339: CB14    		rl   h
033B: CB15    		rl   l
              	
033D: CB06    		RLC  (hl)
033F: CB07    		rlc  a
0341: CB00    		rlc  b
0343: CB01    		rlc  c
0345: CB02    		rlc  d
0347: CB03    		rlc  e
0349: CB04    		rlc  h
034B: CB05    		rlc  l
              	
034D: CB1E    		RR   (hl)
034F: CB1F    		rr   a
0351: CB18    		rr   b
0353: CB19    		rr   c
0355: CB1A    		rr   d
0357: CB1B    		rr   e
0359: CB1C    		rr   h
035B: CB1D    		rr   l
              	
035D: CB0E    		RRC  (hl)
035F: CB0F    		rrc  a
0361: CB08    		rrc  b
0363: CB09    		rrc  c
0365: CB0A    		rrc  d
0367: CB0B    		rrc  e
0369: CB0C    		rrc  h
036B: CB0D    		rrc  l
              	
036D: CB26    		sla  (hl)
036F: CB27    		sla  a
0371: CB20    		sla  b
0373: CB21    		sla  c
0375: CB22    		sla  d
0377: CB23    		sla  e
0379: CB24    		sla  h
037B: CB25    		sla  l
              	
              	!	sll  (hl)
              	!	sll  a
              	!	sll  b
              	!	sll  c
              	!	sll  d
              	!	sll  e
              	!	sll  h
              	!	sll  l
              	
037D: CB2E    		sra   (hl)
037F: CB2F    		sra   a
0381: CB28    		sra   b
0383: CB29    		sra   c
0385: CB2A    		sra   d
0387: CB2B    		sra   e
0389: CB2C    		sra   h
038B: CB2D    		sra   l
              	
038D: CB3E    		srl   (hl)
038F: CB3F    		srl   a
0391: CB38    		srl   b
0393: CB39    		srl   c
0395: CB3A    		srl   d
0397: CB3B    		srl   e
0399: CB3C    		srl   h
039B: CB3D    		srl   l
              	#endif
              	
              	
              	
              	; –––––––––––––––––––––––––––––––––––––––––––––––––
              	;			Z80 / non 8080 opcodes
              	;			using index register
              	; –––––––––––––––––––––––––––––––––––––––––––––––––
              	
              	#if !defined(_8080_)
039D: DDE9    		jp   ix
039F: FDE9    		jp   iy
03A1: DDE9    		jp   (ix)
03A3: FDE9    		jp   (iy)
              	
03A5: DDF9    		ld   sp,ix
03A7: FDF9    		ld   sp,iy
03A9: DD224241		ld   (nn),ix
03AD: FD224241		ld   (nn),iy
03B1: DD2A4241		ld   ix,(nn)
03B5: FD2A4241		ld   iy,(nn)
03B9: DD214241		ld   ix,nn
03BD: FD214241		ld   iy,nn
              	
03C1: DD09    		add  ix,bc
03C3: DD19    		add  ix,de
03C5: DD29    		add  ix,ix
03C7: DD39    		add  ix,sp
03C9: FD09    		add  iy,bc
03CB: FD19    		add  iy,de
03CD: FD29    		add  iy,iy
03CF: FD39    		add  iy,sp
              	
03D1: DD23    		inc  ix
03D3: FD23    		inc  iy
03D5: DD2B    		dec  ix
03D7: FD2B    		dec  iy
              	
03D9: DDE3    		ex   (sp),ix
03DB: DDE3    		ex   ix,(sp)
03DD: FDE3    		ex   (sp),iy
03DF: FDE3    		ex   iy,(sp)
              	
03E1: DDE1    		pop  ix
03E3: FDE1    		pop  iy
03E5: DDE5    		push ix
03E7: FDE5    		push iy
              	
              	; ––––––––––––––––––––––––––––––––––
              	#if !defined(_z180_)
              		ld   a,xh		; illegal
              		ld   a,xl		; illegal
              		ld   a,yh		; illegal
              		ld   a,yl		; illegal
              	
              		ld   b,xh		; illegal
              		ld   b,xl		; illegal
              		ld   b,yh		; illegal
              		ld   b,yl		; illegal
              	
              		ld   c,xh		; illegal
              		ld   c,xl		; illegal
              		ld   c,yh		; illegal
              		ld   c,yl		; illegal
              	
              		ld   d,xh		; illegal
              		ld   d,xl		; illegal
              		ld   d,yh		; illegal
              		ld   d,yl		; illegal
              	
              		ld   e,xh		; illegal
              		ld   e,xl		; illegal
              		ld   e,yh		; illegal
              		ld   e,yl		; illegal
              	
              		ld   xh,a		; illegal
              		ld   xh,b		; illegal
              		ld   xh,c		; illegal
              		ld   xh,d		; illegal
              		ld   xh,e		; illegal
              		ld   xh,xh		; illegal
              		ld   xh,xl		; illegal
              		ld   xh,n		; illegal
              	
              		ld   yl,a		; illegal
              		ld   yl,b		; illegal
              		ld   yl,c		; illegal
              		ld   yl,d		; illegal
              		ld   yl,e		; illegal
              		ld   yl,yh		; illegal
              		ld   yl,yl		; illegal
              		ld   yl,n		; illegal
              	#endif
              	
03E9: DD7E01  		ld   a,(ix+1)
03EC: FD7E01  		ld   a,(iy+n1)
03EF: DD4601  		ld   b,(ix+n1)
03F2: FD4601  		ld   b,(iy+1)
03F5: DD4E01  		ld   c,(ix+1)
03F8: FD4E01  		ld   c,(iy+n1)
03FB: DD5601  		ld   d,(ix+1)
03FE: FD5601  		ld   d,(iy+n1)
0401: DD5E01  		ld   e,(ix+n1)
0404: FD5E01  		ld   e,(iy+1)
0407: DD6601  		ld   h,(ix+1)
040A: FD6601  		ld   h,(iy+n1)
040D: DD6E01  		ld   l,(ix+1)
0410: FD6E01  		ld   l,(iy+n1)
              	
0413: DD7701  		ld   (ix+1),a
0416: DD7001  		ld   (ix+1),b
0419: DD7101  		ld   (ix+1),c
041C: DD7201  		ld   (ix+n1),d
041F: DD7301  		ld   (ix+1),e
0422: DD7401  		ld   (ix+1),h
0425: DD7501  		ld   (ix+1),l
0428: DD360140		ld   (ix+1),n
              	
042C: FD7701  		ld   (iy+1),a
042F: FD7001  		ld   (iy+1),b
0432: FD7101  		ld   (iy+1),c
0435: FD7201  		ld   (iy+1),d
0438: FD7301  		ld   (iy+n1),e
043B: FD7401  		ld   (iy+1),h
043E: FD7501  		ld   (iy+1),l
0441: FD360140		ld   (iy+1),n
              	
              	; ––––––––––––––––––––––––––––––––––
              	#if !defined(_z180_)
              		add  a,xh		; illegal
              		add  a,xl		; illegal
              		add  a,yh		; illegal
              		add  a,yl		; illegal
              	
              		sub  a,XH		; illegal
              		sub  a,XL		; illegal
              		sub  a,YH		; illegal
              		sub  a,YL		; illegal
              	
              		adc  a,xh		; illegal
              		adc  a,xl		; illegal
              		adc  a,yh		; illegal
              		adc  a,yl		; illegal
              	
              		sbc  a,xh		; illegal
              		sbc  a,xl		; illegal
              		sbc  a,yh		; illegal
              		sbc  a,yl		; illegal
              	
              		and  a,XH		; illegal
              		and  a,XL		; illegal
              		and  a,YH		; illegal
              		and  a,YL		; illegal
              	
              		or  a,XH		; illegal
              		or  a,XL		; illegal
              		or  a,YH		; illegal
              		or  a,YL		; illegal
              	
              		xor  a,XH		; illegal
              		xor  a,XL		; illegal
              		xor  a,YH		; illegal
              		xor  a,YL		; illegal
              	
              		cp  a,XH		; illegal
              		cp  a,XL		; illegal
              		cp  a,YH		; illegal
              		cp  a,YL		; illegal
              	
              		inc  xh			; illegal
              		inc  xl			; illegal
              		inc  yh			; illegal
              		inc  yl			; illegal
              	
              		dec  xh			; illegal
              		dec  xl			; illegal
              		dec  yh			; illegal
              		dec  yl			; illegal
              	#endif
              	
              	; ––––––––––––––––––––––––––––––––––
0445: DD8601  		add  a,(ix+1)
0448: FD8601  		add  a,(iy+n1)
              	
044B: DD9601  		sub  (ix+1)
044E: FD9601  		sub  (iy+1)
0451: DD9601  		sub  a,(ix+1)
0454: FD9601  		sub  a,(iy+1)
              	
0457: DD8E01  		adc  a,(ix+1)
045A: FD8E01  		adc  a,(iy+n1)
              	
045D: DD9E01  		sbc  a,(ix+1)
0460: FD9E01  		sbc  a,(iy+1)
              	
0463: DDA601  		AND  (ix+1)
0466: FDA601  		AND  (iy+1)
0469: DDA601  		and  a,(ix+1)
046C: FDA601  		and  a,(iy+n1)
              	
046F: DDB601  		or  (ix+1)
0472: FDB601  		or  (iy+1)
0475: DDB601  		or  a,(ix+1)
0478: FDB601  		or  a,(iy+1)
              	
047B: DDAE01  		xor  (ix+1)
047E: FDAE01  		xor  (iy+1)
0481: DDAE01  		xor  a,(ix+1)
0484: FDAE01  		xor  a,(iy+1)
              	
0487: DDBE01  		cp  (ix+n1)
048A: FDBE01  		cp  (iy+1)
048D: DDBE01  		cp  a,(ix+1)
0490: FDBE01  		cp  a,(iy+1)
              	
0493: DD3401  		inc  (IX+1)
0496: FD3401  		inc  (iy+1)
0499: DD3501  		dec  (IX+n1)
049C: FD3501  		dec  (iy+1)
              	
              	; ––––––––––––––––––––––––––––––––––
049F: DDCB0146		bit  0,(ix+n1)
04A3: FDCB0146		bit  0,(iy+1)
04A7: DDCB014E		bit  1,(ix+1)
04AB: FDCB0156		bit  2,(iy+1)
04AF: DDCB015E		bit  3,(ix+1)
04B3: FDCB0166		bit  4,(iy+1)
04B7: DDCB016E		bit  5,(ix+1)
04BB: FDCB0176		bit  6,(iy+1)
04BF: DDCB017E		bit  7,(ix+1)
              	
04C3: DDCB0186		res  0,(ix+1)
04C7: FDCB0186		res  0,(iy+1)
04CB: DDCB018E		res  1,(ix+1)
04CF: FDCB0196		res  2,(iy+1)
04D3: DDCB019E		res  3,(ix+1)
04D7: FDCB01A6		res  4,(iy+1)
04DB: DDCB01AE		res  5,(ix+1)
04DF: FDCB01B6		res  6,(iy+1)
04E3: DDCB01BE		res  7,(ix+1)
              	
04E7: DDCB01C6		set  0,(ix+1)
04EB: FDCB01C6		set  0,(iy+1)
04EF: DDCB01CE		set  1,(ix+1)
04F3: FDCB01D6		set  2,(iy+1)
04F7: DDCB01DE		set  3,(ix+1)
04FB: FDCB01E6		set  4,(iy+1)
04FF: DDCB01EE		set  5,(ix+1)
0503: FDCB01F6		set  6,(iy+1)
0507: DDCB01FE		set  7,(ix+1)
              	
050B: DDCB0116		rl   (ix+1)
050F: FDCB0116		rl   (iy+1)
0513: DDCB0106		rlc  (ix+1)
0517: FDCB0106		rlc  (iy+1)
051B: DDCB011E		rr   (ix+1)
051F: FDCB011E		rr   (iy+1)
0523: DDCB010E		rrc  (ix+1)
0527: FDCB010E		rrc  (iy+1)
052B: DDCB0126		sla  (ix+1)
052F: FDCB0126		sla  (iy+1)
              	#if !defined(_z180_)	
              		sll  (ix+1)
              		sll  (iy+1)
              	#endif	
0533: DDCB012E		sra  (ix+1)
0537: FDCB012E		sra  (iy+1)
053B: DDCB013E		srl  (ix+1)
053F: FDCB013E		srl  (iy+1)
              	#endif		; !defined(i8080)
              	
              	
              	
              	
              	; –––––––––––––––––––––––––––––––––––––––––––––––––
              	;		z80 illegal IXCB opcodes
              	; –––––––––––––––––––––––––––––––––––––––––––––––––
              	
              	#if defined(_ixcbxh_)
              	    sra	xh
              	    sra	yl
              	    sla	xh
              	    sla	yl
              	    srl	xh
              	    srl	yl
              	    sll	xh
              	    sll	yl
              	
              	    rl   xh
              	    rl   yl
              	    rlc  xh
              	    rlc  yl
              	    rr   xh
              	    rr   yl
              	    rrc  xh
              	    rrc  yl
              	
              		bit  0,xh		; illegal
              		bit  1,xl		; illegal
              		bit  2,yh		; illegal
              		bit  3,yl		; illegal
              		bit  4,xh		; illegal
              		bit  5,xl		; illegal
              		bit  6,yh		; illegal
              		bit  7,yl		; illegal
              	
              		res  0,xh		; illegal
              		res  1,xl		; illegal
              		res  2,yh		; illegal
              		res  3,yl		; illegal
              		res  4,xh		; illegal
              		res  5,xl		; illegal
              		res  6,yh		; illegal
              		res  7,yl		; illegal
              	
              		set  0,xh		; illegal
              		set  1,xl		; illegal
              		set  2,yh		; illegal
              		set  3,yl		; illegal
              		set  4,xh		; illegal
              		set  5,xl		; illegal
              		set  6,yh		; illegal
              		set  7,yl		; illegal
              	#endif
              	
              	#if test_fails && (!defined(_ixcbxh_) || defined(_z180_))
              	!	bit  0,xh		; illegal
              	!	bit  1,xl		; illegal
              	!	bit  2,yh		; illegal
              	!	bit  3,yl		; illegal
              	!	bit  4,xh		; illegal
              	!	bit  5,xl		; illegal
              	!	bit  6,yh		; illegal
              	!	bit  7,yl		; illegal
              	
              	!	res  0,xh		; illegal
              	!	res  1,xl		; illegal
              	!	res  2,yh		; illegal
              	!	res  3,yl		; illegal
              	!	res  4,xh		; illegal
              	!	res  5,xl		; illegal
              	!	res  6,yh		; illegal
              	!	res  7,yl		; illegal
              	
              	!	set  0,xh		; illegal
              	!	set  1,xl		; illegal
              	!	set  2,yh		; illegal
              	!	set  3,yl		; illegal
              	!	set  4,xh		; illegal
              	!	set  5,xl		; illegal
              	!	set  6,yh		; illegal
              	!	set  7,yl		; illegal
              	
              	!	rl	 xh
              	!	rl	 yl
              	!	rlc	 xh
              	!	rlc	 yl
              	!	rr	 xh
              	!	rr	 yl
              	!	rrc	 xh
              	!	rrc	 yl
              	
              	!	sra	 xh
              	!	sra	 yl
              	!	sla	 xh
              	!	sla	 yl
              	!	srl	 xh
              	!	srl	 yl
              	!	sll	 xh
              	!	sll	 yl
              	#endif
              	
              	#if defined(_ixcbr2_)
              		sra	 (ix+1),a
              		sra	 (iy+1),b
              		sla	 (ix+1),c
              		sla	 (iy+1),d
              		srl	 (ix+1),e
              		srl	 (iy+1),a
              		sll	 (ix+1),b
              		sll	 (iy+1),c
              		sra	 (iy+1),h
              		sla	 (ix+1),l
              		srl	 (iy+1),h
              		sll	 (ix+1),l
              	
              		rl   (ix+1),a
              		rl   (iy+1),b
              		rlc  (ix+1),c
              		rlc  (iy+1),d
              		rr   (ix+1),e
              		rr   (iy+1),a
              		rrc  (ix+1),b
              		rrc  (iy+1),c
              		rl   (iy+1),h
              		rlc  (ix+1),l
              		rr   (iy+1),h
              		rrc  (ix+1),l
              	
              		bit  0,(ix+1),a	; illegal		TODO:	evtl. they all behave like "bit b,(ix+dis)"
              		bit  1,(iy+1),b	; illegal				because 'bit' does not write to register
              		bit  2,(ix+1),c	; illegal				to be tested!
              		bit  3,(iy+1),h	; illegal				different docs state different opinions!
              		bit  4,(ix+1),l	; illegal
              		bit  5,(iy+1),d	; illegal
              		bit  6,(ix+1),e	; illegal
              		bit  7,(iy+1),b	; illegal
              	
              		res  0,(ix+1),a	; illegal
              		res  1,(iy+1),b	; illegal
              		res  2,(ix+1),c	; illegal
              		res  3,(iy+1),h	; illegal
              		res  4,(ix+1),l	; illegal
              		res  5,(iy+1),d	; illegal
              		res  6,(ix+1),e	; illegal
              		res  7,(iy+1),b	; illegal
              	
              		set  0,(ix+1),a	; illegal
              		set  1,(iy+1),b	; illegal
              		set  2,(ix+1),c	; illegal
              		set  3,(iy+1),h	; illegal
              		set  4,(ix+1),l	; illegal
              		set  5,(iy+1),d	; illegal
              		set  6,(ix+1),e	; illegal
              		set  7,(iy+1),b	; illegal
              	#endif
              	
              	#if test_fails && (!defined(_ixcbr2_) || defined(_z180_))
              	!	rl   (ix+1),a
              	!	rl   (iy+1),b
              	!	rlc  (ix+1),c
              	!	rlc  (iy+1),d
              	!	rr   (ix+1),e
              	!	rr   (iy+1),a
              	!	rrc  (ix+1),b
              	!	rrc  (iy+1),c
              	
              	!	sra	 (ix+1),a
              	!	sra	 (iy+1),b
              	!	sla	 (ix+1),c
              	!	sla	 (iy+1),d
              	!	srl	 (ix+1),e
              	!	srl	 (iy+1),a
              	!	sll	 (ix+1),b
              	!	sll	 (iy+1),c
              	
              	!	bit  0,(ix+1),a	; illegal
              	!	bit  1,(iy+1),b	; illegal
              	!	bit  2,(ix+1),c	; illegal
              	!	bit  3,(iy+1),h	; illegal
              	!	bit  4,(ix+1),l	; illegal
              	!	bit  5,(iy+1),d	; illegal
              	!	bit  6,(ix+1),e	; illegal
              	!	bit  7,(iy+1),b	; illegal
              	
              	!	res  0,(ix+1),a	; illegal
              	!	res  1,(iy+1),b	; illegal
              	!	res  2,(ix+1),c	; illegal
              	!	res  3,(iy+1),h	; illegal
              	!	res  4,(ix+1),l	; illegal
              	!	res  5,(iy+1),d	; illegal
              	!	res  6,(ix+1),e	; illegal
              	!	res  7,(iy+1),b	; illegal
              	
              	!	set  0,(ix+1),a	; illegal
              	!	set  1,(iy+1),b	; illegal
              	!	set  2,(ix+1),c	; illegal
              	!	set  3,(iy+1),h	; illegal
              	!	set  4,(ix+1),l	; illegal
              	!	set  5,(iy+1),d	; illegal
              	!	set  6,(ix+1),e	; illegal
              	!	set  7,(iy+1),b	; illegal
              	
              	!	rl   (iy+1),h
              	!	rlc  (ix+1),l
              	!	rr   (iy+1),h
              	!	rrc  (ix+1),l
              	!	sra	(iy+1),h
              	!	sla	(ix+1),l
              	!	srl	(iy+1),h
              	!	sll	(ix+1),l
              	#endif
              	
              	
              	
              	
              	; –––––––––––––––––––––––––––––––––––––––––––––––––
              	;			Hitachi HD64180 opcodes
              	; –––––––––––––––––––––––––––––––––––––––––––––––––
              	
              	#if defined(_z180_)
0543: ED0040  		in0  b,(n)		; ed 00 n	hd 64180
0546: ED0840  		in0  c,(n)		; ed 08 n	hd 64180
0549: ED1040  		in0  d,(n)		; ed 10 n	hd 64180
054C: ED1840  		in0  e,(n)		; ed 18 n	hd 64180
054F: ED2040  		in0  h,(n)		; ed 20 n	hd 64180
0552: ED2840  		in0  l,(n)		; ed 28 n	hd 64180
0555: ED3040  		in0  f,(n)		; ed 30 n	hd 64180
0558: ED3840  		in0  a,(n)		; ed 38 n	hd 64180
              	
055B: ED4C    		mult  bc		; ed 4c		hd 64180
055D: ED5C    		mult  de		; ed 5c		hd 64180
055F: ED6C    		mult  hl		; ed 6c		hd 64180
0561: ED7C    		mult  sp		; ed 7c		hd 64180
              	
0563: ED0140  	    out0 (n),b		; ed 01 n	hd 64180
0566: ED0940  	    out0 (n),c		; ed 09 n	hd 64180
0569: ED1140  	    out0 (n),d		; ed 11 n	hd 64180
056C: ED1940  	    out0 (n),e		; ed 19 n	hd 64180
056F: ED2140  	    out0 (n),h		; ed 21 n	hd 64180
0572: ED2940  	    out0 (n),l		; ed 29 n	hd 64180
0575: ED3940  	    out0 (n),a		; ed 39 n	hd 64180
              	
0578: ED83    	    otim			; ed 83		hd 64180
057A: ED8B    	    otdm			; ed 8b		hd 64180
057C: ED93    	    otimr			; ed 93		hd 64180
057E: ED9B    	    otdmr			; ed 9b		hd 64180
              	
0580: ED76    	    slp				; ed 76		hd 64180
              	
0582: ED04    		tst  b			; ed 04		hd 64180
0584: ED0C    		tst  c			; ed 0c		hd 64180
0586: ED14    		tst  d			; ed 14		hd 64180
0588: ED1C    		tst  e			; ed 1c		hd 64180
058A: ED24    		tst  h			; ed 24		hd 64180
058C: ED2C    		tst  l			; ed 2c		hd 64180
058E: ED34    		tst  (hl)		; ed 34		hd 64180
0590: ED3C    		tst  a			; ed 3c		hd 64180
0592: ED6440  		tst  n			; ed 64	n	hd 64180
0595: ED7440  		tstio n			; ed 74	n	hd 64180		// korr kio 2014-12-26; was: ed 76 (which is SLP)
              	#endif
              	
0006:         	n6	equ	6
0001:         	n1	equ	1
0010:         	n16	equ	16
              	
              	
              	
              	
              	
              	
              	; –––––––––––––––––––––––––––––––––––––––––––––––––
              	;		ill. arguments for all opcodes:
              	; –––––––––––––––––––––––––––––––––––––––––––––––––
              	
              	#if test_fails
              	!	jr   p,loop2
              	!	jr   m,loop2
              	!	jr   po,loop2
              	!	jr   pe,loop2
              	
              	!	im	3
              	
              	!	adc  ix,bc
              	!	adc  ix,de
              	!	adc  ix,ix
              	!	adc  ix,iy
              	!	adc  ix,sp
              	!	adc  iy,bc
              	!	adc  iy,de
              	!	adc  iy,iy
              	!	adc  iy,ix
              	!	adc  iy,sp
              	
              	!	add  ix,iy
              	!	add  ix,hl
              	!	add  iy,ix
              	!	add  iy,hl
              	
              	!	ld	(hl),(hl)
              	!	ld	(ix+1),(ix+1)
              	!	ld	(ix+1),(iy+1)
              	!	ld	(iy+1),(hl)
              	!	ld	(iy+1),(ix+1)
              	!	ld	(iy+1),(iy+1)
              	
              	!	ld	XH,(hl)
              	!	ld	xh,(ix+1)
              	!	ld	xh,(iy+1)
              	!	ld	xh,h
              	!	ld	xh,l
              	!	ld	xh,yl
              	!	ld	YL,(hl)
              	!	ld	yl,(ix+1)
              	!	ld	yl,(iy+1)
              	!	ld	yl,h
              	!	ld	yl,l
              	!	ld	yl,xh
              	
              	!	out  (c),xh
              	!	out  (c),yl
              	
              	!	sbc  ix,bc
              	!	sbc  ix,de
              	!	sbc  ix,ix
              	!	sbc  ix,iy
              	!	sbc  ix,sp
              	!	sbc  iy,bc
              	!	sbc  iy,de
              	!	sbc  iy,iy
              	!	sbc  iy,ix
              	!	sbc  iy,sp
              	#endif ; test_fails
              	
              	
              	
              	
              	; –––––––––––––––––––––––––––––––––––––––––––––––––
              	;		ill. 8080 opcodes:
              	; –––––––––––––––––––––––––––––––––––––––––––––––––
              	#if test_fails & defined(_8080_)
              	!	exx
              	!	Neg
              	!	cpd
              	!	cpdr
              	!	cpir
              	!	cpi
              	!	Ind
              	!	Indr
              	!	Ini
              	!	Inir
              	!	Ldd
              	!	Lddr
              	!	Ldi
              	!	Ldir
              	!	Otdr
              	!	Otir
              	!	Outd
              	!	Outi
              	!	Rld
              	!	Rrd
              	!	Reti
              	!	Retn
              	!	djnz $
              	#endif
              	
              	
              	
              	; –––––––––––––––––––––––––––––––––––––––––––––––––
              	;		ill. arguments for 8080 opcodes:
              	; –––––––––––––––––––––––––––––––––––––––––––––––––
              	
              	#if test_fails & defined(_8080_)
              	!	jp   (ix)
              	!	jp   (iy)
              	
              	; ––––––––––––––––––––––––––––––––––
              	loop3:
              	!	jr   loop3
              	!	JR   C,loop3
              	!	jr   nc,loop3
              	!	jr   nz,loop3
              	!	jr   z,loop3
              	
              	; ––––––––––––––––––––––––––––––––––
              	!	IM	0
              	!	im	n1
              	!	im	2
              	
              	; ––––––––––––––––––––––––––––––––––
              	!	pop  ix
              	!	pop  iy
              	!	push ix
              	!	push iy
              	
              	!	ld   i,a
              	!	ld   r,a
              	
              	!	ld   (nn),bc
              	!	ld   (nn),de
              	!	ld   (nn),ix
              	!	ld   (nn),iy
              	!	ld   (nn),sp
              	!	ld   bc,(nn)
              	!	ld   de,(nn)
              	!	ld   ix,(nn)
              	!	ld   iy,(nn)
              	!	ld   sp,(nn)
              	!	ld   ix,nn
              	!	ld   iy,nn
              	
              	!	ld   (ix+1),b
              	!	ld   (ix+1),c
              	!	ld   (ix+n1),d
              	!	ld   (ix+1),e
              	!	ld   (ix+1),h
              	!	ld   (ix+1),l
              	!	ld   (ix+1),n
              	
              	!	ld   (iy+1),b
              	!	ld   (iy+1),c
              	!	ld   (iy+1),d
              	!	ld   (iy+n1),e
              	!	ld   (iy+1),h
              	!	ld   (iy+1),l
              	!	ld   (iy+1),n
              	
              	!	ld   xh,a		; illegal
              	!	ld   xh,b		; illegal
              	!	ld   xh,c		; illegal
              	!	ld   xh,d		; illegal
              	!	ld   xh,e		; illegal
              	!	ld   xh,xh		; illegal
              	!	ld   xh,xl		; illegal
              	!	ld   xh,n		; illegal
              	
              	!	ld   yl,a		; illegal
              	!	ld   yl,b		; illegal
              	!	ld   yl,c		; illegal
              	!	ld   yl,d		; illegal
              	!	ld   yl,e		; illegal
              	!	ld   yl,yh		; illegal
              	!	ld   yl,yl		; illegal
              	!	ld   yl,n		; illegal
              	
              	!	add  ix,bc
              	!	add  ix,de
              	!	add  ix,ix
              	!	add  ix,sp
              	!	add  iy,bc
              	!	add  iy,de
              	!	add  iy,iy
              	!	add  iy,sp
              	
              	!	adc  hl,bc
              	!	adc  hl,de
              	!	adc  hl,hl
              	!	adc  hl,sp
              	
              	!	sbc  hl,bc
              	!	sbc  hl,de
              	!	sbc  hl,hl
              	!	sbc  hl,sp
              	
              	; ––––––––––––––––––––––––––––––––––
              	!	inc  (IX+1)
              	!	inc  (iy+1)
              	!	inc  xh			; illegal
              	!	inc  xl			; illegal
              	!	inc  yh			; illegal
              	!	inc  yl			; illegal
              	!	inc  ix
              	!	inc  iy
              	
              	; ––––––––––––––––––––––––––––––––––
              	!	dec  (IX+n1)
              	!	dec  (iy+1)
              	!	dec  xh			; illegal
              	!	dec  xl			; illegal
              	!	dec  yh			; illegal
              	!	dec  yl			; illegal
              	!	dec  ix
              	!	dec  iy
              	
              	; ––––––––––––––––––––––––––––––––––
              	!	ex   af,af'
              	!	ex   (sp),ix
              	!	ex   ix,(sp)
              	!	ex   (sp),iy
              	!	ex   iy,(sp)
              	
              	; ––––––––––––––––––––––––––––––––––
              	!	IN   a,(c)
              	!	in   b,(bc)
              	!	in   c,(c)
              	!	in   d,(bc)
              	!	in   e,(c)
              	!	in   h,(bc)
              	!	in   l,(c)
              	!	in   f,(bc)
              	
              	; ––––––––––––––––––––––––––––––––––
              	!	OUT  (c),a
              	!	out  (bc),b
              	!	out  (c),c
              	!	out  (bc),d
              	!	out  (c),e
              	!	out  (bc),h
              	!	out  (c),l
              	!	out  (c),0
              	
              	; ––––––––––––––––––––––––––––––––––
              	!	bit  0,a
              	!	bit  0,b
              	!	bit  0,c
              	!	bit  0,d
              	!	bit  0,e
              	!	bit  0,h
              	!	bit  0,l
              	!	BIT  0,(hl)
              	!	bit  0,(ix+n1)
              	!	bit  0,(iy+1)
              	
              	!	bit  1,a
              	!	BIT  n1,(hl)
              	!	bit  1,(ix+1)
              	!	bit  2,h
              	!	BIT  2,(hl)
              	!	bit  2,(iy+1)
              	!	bit  3,l
              	!	BIT  3,(hl)
              	!	bit  3,(ix+1)
              	!	bit  4,d
              	!	BIT  4,(hl)
              	!	bit  4,(iy+1)
              	!	bit  5,e
              	!	BIT  5,(hl)
              	!	bit  5,(ix+1)
              	!	bit  6,c
              	!	BIT  n6,(hl)
              	!	bit  6,(iy+1)
              	!	bit  7,b
              	!	BIT  7,(hl)
              	!	bit  7,(ix+1)
              	
              	; ––––––––––––––––––––––––––––––––––
              	!	res  0,a
              	!	res  0,b
              	!	res  0,c
              	!	res  0,d
              	!	res  0,e
              	!	res  0,h
              	!	res  0,l
              	!	res  0,(hl)
              	!	res  0,(ix+1)
              	!	res  0,(iy+1)
              	
              	!	res  1,a
              	!	res  1,(hl)
              	!	res  1,(ix+1)
              	!	res  2,h
              	!	res  2,(hl)
              	!	res  2,(iy+1)
              	!	res  3,l
              	!	res  3,(hl)
              	!	res  3,(ix+1)
              	!	res  4,d
              	!	res  4,(hl)
              	!	res  4,(iy+1)
              	!	res  5,e
              	!	res  5,(hl)
              	!	res  5,(ix+1)
              	!	res  6,c
              	!	res  6,(hl)
              	!	res  6,(iy+1)
              	!	res  7,b
              	!	res  7,(hl)
              	!	res  7,(ix+1)
              	
              	; ––––––––––––––––––––––––––––––––––
              	!	set  0,a
              	!	set  0,b
              	!	set  0,c
              	!	set  0,d
              	!	set  0,e
              	!	set  0,h
              	!	set  0,l
              	!	set  0,(hl)
              	!	set  0,(ix+1)
              	!	set  0,(iy+1)
              	
              	!	set  1,a
              	!	set  n1,(hl)
              	!	set  1,(ix+1)
              	!	set  2,h
              	!	set  2,(hl)
              	!	set  2,(iy+1)
              	!	set  3,l
              	!	set  3,(hl)
              	!	set  3,(ix+1)
              	!	set  4,d
              	!	set  4,(hl)
              	!	set  4,(iy+1)
              	!	set  5,e
              	!	set  5,(hl)
              	!	set  5,(ix+1)
              	!	set  6,c
              	!	set  n6,(hl)
              	!	set  6,(iy+1)
              	!	set  7,b
              	!	set  7,(hl)
              	!	set  7,(ix+1)
              	
              	; ––––––––––––––––––––––––––––––––––
              	!	RL   (hl)
              	!	rl   (ix+1)
              	!	rl   (iy+1)
              	!	rl   a
              	!	rl   b
              	!	rl   c
              	!	rl   d
              	!	rl   e
              	!	rl   h
              	!	rl   l
              	
              	; ––––––––––––––––––––––––––––––––––
              	!	RLC  (hl)
              	!	rlc  (ix+1)
              	!	rlc  (iy+1)
              	!	rlc  a
              	!	rlc  b
              	!	rlc  c
              	!	rlc  d
              	!	rlc  e
              	!	rlc  h
              	!	rlc  l
              	
              	; ––––––––––––––––––––––––––––––––––
              	!	RR   (hl)
              	!	rr   (ix+1)
              	!	rr   (iy+1)
              	!	rr   a
              	!	rr   b
              	!	rr   c
              	!	rr   d
              	!	rr   e
              	!	rr   h
              	!	rr   l
              	
              	; ––––––––––––––––––––––––––––––––––
              	!	RRC  (hl)
              	!	rrc  (ix+1)
              	!	rrc  (iy+1)
              	!	rrc  a
              	!	rrc  b
              	!	rrc  c
              	!	rrc  d
              	!	rrc  e
              	!	rrc  h
              	!	rrc  l
              	
              	; ––––––––––––––––––––––––––––––––––
              	!	sla  (hl)
              	!	sla  (ix+1)
              	!	sla  (iy+1)
              	!	sla  a
              	!	sla  b
              	!	sla  c
              	!	sla  d
              	!	sla  e
              	!	sla  h
              	!	sla  l
              	
              	; ––––––––––––––––––––––––––––––––––
              	!	sll  (hl)
              	!	sll  (ix+1)
              	!	sll  (iy+1)
              	!	sll  a
              	!	sll  b
              	!	sll  c
              	!	sll  d
              	!	sll  e
              	!	sll  h
              	!	sll  l
              	
              	; ––––––––––––––––––––––––––––––––––
              	!	sra   (hl)
              	!	sra   (ix+1)
              	!	sra   (iy+1)
              	!	sra   a
              	!	sra   b
              	!	sra   c
              	!	sra   d
              	!	sra   e
              	!	sra   h
              	!	sra   l
              	
              	; ––––––––––––––––––––––––––––––––––
              	!	srl   (hl)
              	!	srl   (ix+1)
              	!	srl   (iy+1)
              	!	srl   a
              	!	srl   b
              	!	srl   c
              	!	srl   d
              	!	srl   e
              	!	srl   h
              	!	srl   l
              	
              	#endif ; test_fails & defined(i8080)
              	
              	#if test_fails & defined(_8080_)
              	!	jp   ix
              	!	jp   iy
              	
              	!	ld   a,i
              	!	ld   a,r
              	
              	!	ld   sp,ix
              	!	ld   sp,iy
              	
              	!	ld	h,xh
              	!	ld	h,xl
              	!	ld	h,yh
              	!	ld	h,yl
              	!	ld	l,xh
              	!	ld	l,xl
              	!	ld	l,yh
              	!	ld	l,yl
              	!	ld	(hl),(ix+1)
              	!	ld	(hl),(iy+1)
              	!	ld	(hl),xh
              	!	ld	(hl),xl
              	!	ld	(hl),yh
              	!	ld	(hl),yl
              	!	ld	(ix+1),(hl)
              	!	ld	(ix+1),xh
              	!	ld	(ix+1),xl
              	!	ld	(ix+1),yh
              	!	ld	(ix+1),yl
              	!	ld	(iy+1),xh
              	!	ld	(iy+1),xl
              	!	ld	(iy+1),yh
              	!	ld	(iy+1),yl
              	!	ld	hl,ix
              	!	ld	hl,iy
              	
              	!	ld   a,(ix+1)
              	!	ld   a,(iy+n1)
              	!	ld   a,xh		; illegal
              	!	ld   a,xl		; illegal
              	!	ld   a,yh		; illegal
              	!	ld   a,yl		; illegal
              	
              	!	ld   b,(ix+n1)
              	!	ld   b,(iy+1)
              	!	ld   b,xh		; illegal
              	!	ld   b,xl		; illegal
              	!	ld   b,yh		; illegal
              	!	ld   b,yl		; illegal
              	
              	!	ld   c,(ix+1)
              	!	ld   c,(iy+n1)
              	!	ld   c,xh		; illegal
              	!	ld   c,xl		; illegal
              	!	ld   c,yh		; illegal
              	!	ld   c,yl		; illegal
              	
              	!	ld   d,(ix+1)
              	!	ld   d,(iy+n1)
              	!	ld   d,xh		; illegal
              	!	ld   d,xl		; illegal
              	!	ld   d,yh		; illegal
              	!	ld   d,yl		; illegal
              	
              	!	ld   e,(ix+n1)
              	!	ld   e,(iy+1)
              	!	ld   e,xh		; illegal
              	!	ld   e,xl		; illegal
              	!	ld   e,yh		; illegal
              	!	ld   e,yl		; illegal
              	
              	!	ld   h,(ix+1)
              	!	ld   h,(iy+n1)
              	
              	!	ld   l,(ix+1)
              	!	ld   l,(iy+n1)
              	
              	!	add  a,(ix+1)
              	!	add  a,(iy+n1)
              	!	add  a,xh		; illegal
              	!	add  a,xl		; illegal
              	!	add  a,yh		; illegal
              	!	add  a,yl		; illegal
              	
              	!	sub  (ix+1)
              	!	sub  (iy+1)
              	!	sub  a,(ix+1)
              	!	sub  a,(iy+1)
              	!	sub  a,XH		; illegal
              	!	sub  a,XL		; illegal
              	!	sub  a,YH		; illegal
              	!	sub  a,YL		; illegal
              	
              	!	adc  a,(ix+1)
              	!	adc  a,(iy+n1)
              	!	adc  a,xh		; illegal
              	!	adc  a,xl		; illegal
              	!	adc  a,yh		; illegal
              	!	adc  a,yl		; illegal
              	
              	!	sbc  a,(ix+1)
              	!	sbc  a,(iy+1)
              	!	sbc  a,xh		; illegal
              	!	sbc  a,xl		; illegal
              	!	sbc  a,yh		; illegal
              	!	sbc  a,yl		; illegal
              	
              	!	AND  (ix+1)
              	!	AND  (iy+1)
              	!	and  a,(ix+1)
              	!	and  a,(iy+n1)
              	!	and  a,XH		; illegal
              	!	and  a,XL		; illegal
              	!	and  a,YH		; illegal
              	!	and  a,YL		; illegal
              	
              	!	or  (ix+1)
              	!	or  (iy+1)
              	!	or  a,(ix+1)
              	!	or  a,(iy+1)
              	!	or  a,XH		; illegal
              	!	or  a,XL		; illegal
              	!	or  a,YH		; illegal
              	!	or  a,YL		; illegal
              	
              	!	xor  (ix+1)
              	!	xor  (iy+1)
              	!	xor  a,(ix+1)
              	!	xor  a,(iy+1)
              	!	xor  a,XH		; illegal
              	!	xor  a,XL		; illegal
              	!	xor  a,YH		; illegal
              	!	xor  a,YL		; illegal
              	
              	!	cp  (ix+n1)
              	!	cp  (iy+1)
              	!	cp  a,(ix+1)
              	!	cp  a,(iy+1)
              	!	cp  a,XH		; illegal
              	!	cp  a,XL		; illegal
              	!	cp  a,YH		; illegal
              	!	cp  a,YL		; illegal
              	
              	#endif ; test_fails & defined(i8080)
              	
              	
              	
              	
              	
              	
              	
              	
              	#if test_compound_opcodes
              	
0598: 424B    		ld	bc,de		; compound
059A: 444D    		ld	bc,hl		; compound
059C: 5059    		ld	de,bc		; compound
059E: 545D    		ld	de,hl		; compound
05A0: 6069    		ld	hl,bc		; compound
05A2: 626B    		ld	hl,de		; compound
05A4: 4E23462B		ld	bc,(hl)
05A8: 5E23562B		ld	de,(hl)
              	
              	#if !defined(_8080_)
              	#if !defined(_z180_)
              		ld	bc,ix		; compound, illegal
              		ld	bc,iy		; compound, illegal
              		ld	de,ix		; compound, illegal
              		ld	de,iy		; compound, illegal
              	#endif
05AC: DD4E01  		ld	bc,(ix+1)
05AF: DD4602  	
05B2: DD5E01  		ld	de,(ix+1)
05B5: DD5602  	
05B8: FD4E01  		ld	bc,(iy+1)
05BB: FD4602  	
05BE: FD5E01  		ld	de,(iy+1)
05C1: FD5602  	
              	#endif
              	
              	#endif ; test_compound_opcodes
              	
              	
              	
              	
              	
              	
              	
              	
              	
              	
              	
              	
              	
              	
              	
              	
              	
***ERROR*** No such file or directory: file = "/pub/Develop/Projects/zasm-4.0/Test/Z180/original/zasm-test-opcodes-180." (fd108)


; +++ segments +++

#CODE          = $0000 =     0,  size = $05C4 =  1476

; +++ global symbols +++

_end                  = $05C4 =  1476          zasm-test-opcodes-180.asm:21 (unused)
_size                 = $05C4 =  1476          zasm-test-opcodes-180.asm:21 (unused)
_z180_                = $0001 =     1          zasm-test-opcodes-180.asm:21 (unused)
loop2                 = $0249 =   585          zasm-test-opcodes-180.asm:630
n                     = $0040 =    64          zasm-test-opcodes-180.asm:590
n1                    = $0001 =     1          zasm-test-opcodes-180.asm:1357
n16                   = $0010 =    16          zasm-test-opcodes-180.asm:1358
n6                    = $0006 =     6          zasm-test-opcodes-180.asm:1356
nn                    = $4142 = 16706          zasm-test-opcodes-180.asm:589
test_addressing_modes = $0001 =     1          zasm-test-opcodes-180.asm:16
test_compound_opcodes = $0001 =     1          zasm-test-opcodes-180.asm:17
test_expressions      = $0001 =     1          zasm-test-opcodes-180.asm:15
test_fails            = $0001 =     1          zasm-test-opcodes-180.asm:18

; +++ local symbols +++

anton   = $0014 =    20          zasm-test-opcodes-180.asm:36 (unused)
n20     = $0014 =    20          zasm-test-opcodes-180.asm:32
n5      = $0005 =     5          zasm-test-opcodes-180.asm:31

; +++ local symbols +++

n6      = $0006 =     6          zasm-test-opcodes-180.asm:257
nn      = $0040 =    64          zasm-test-opcodes-180.asm:256


total time: 0.0271 sec.
1 error
